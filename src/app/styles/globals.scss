@use 'sass:color';
@use './variables' as *;

html, body {
  width: 100vw;
  max-width: 100vw;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

body {
  color: $dark-color;
  background: $background-color-2;
  font-family: $font-family-primary;
  overflow-x: hidden;
  width: 100%;
}

.button-container {
  min-width: 90%;
  margin-top: $spacing-large;
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: $spacing-medium;
  

  @media (min-width: 1000px) {
    align-items: center;
    gap: $spacing-large;
    flex-wrap: wrap;
  }
}

.button {
  min-width: 150px;
  width: 200px;
  font-size: 20px;
  padding: $spacing-small $spacing-medium;
  border: 2px solid transparent;
  border-radius: $border-radius;
  font-weight: $button-font-weight;
  font-family: $font-family-primary; // Open Sans
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  box-shadow: $box-shadow;
  transition: all 0.2s ease-in-out;
  color: white;
  font-weight: bold;

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
  }

  &:active {
    transform: scale(0.98);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.button-primary {
  background-color: $primary-color;
  border-color: color.adjust($primary-color, $lightness: -10%);
}

.button-secondary {
  background-color: $button-secondary-color;
  border-color: color.adjust($button-secondary-color, $lightness: -10%);
}

.content-wrap {
  flex: 1;
  width: 100%;
}

.page-container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}
@media (max-width: 1000px) {
  .button {
    font-size: 16px;
    width: 200px;
  }
  
}

/* ---------- Disabled Button (global) ---------- */
:root {
  --btn-disabled-opacity: .55;
  --btn-disabled-filter: grayscale(30%);
}

/* Mixin reutilizable */
@mixin disabled-visual {
  opacity: var(--btn-disabled-opacity);
  filter: var(--btn-disabled-filter);
  cursor: not-allowed !important;
}

/* Deshabilita interacción + look */
@mixin disabled-full {
  @include disabled-visual;
  pointer-events: none; /* bloquea clicks en elementos que no soportan :disabled */
}

/* Casos típicos */
button:disabled,
[aria-disabled="true"],
.is-disabled {
  @include disabled-full;
}

/* Sólo apariencia (no bloquea interacción) */
.is-visually-disabled {
  @include disabled-visual;
}

/* Mantener accesibilidad del foco si aplica */
button:disabled:focus-visible,
[aria-disabled="true"]:focus-visible,
.is-disabled:focus-visible {
  outline: 2px solid CanvasText;
  outline-offset: 2px;
}

/* Alto contraste (Windows) */
@media (forced-colors: active) {
  button:disabled,
  [aria-disabled="true"],
  .is-disabled,
  .is-visually-disabled {
    opacity: 1; /* en HC, evitá bajar contraste */
    filter: none;
    border: 1px solid GrayText;
    color: GrayText;
  }
}
